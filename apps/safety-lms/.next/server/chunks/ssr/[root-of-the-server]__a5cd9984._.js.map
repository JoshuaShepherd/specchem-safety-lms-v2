{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,kVAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,kJAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,kVAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,kJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,kVAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,kJAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,kVAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,kJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,kVAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kJAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,kVAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,kJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,kVAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,4SAAI,GAAG;IAC9B,qBACE,6WAAC;QACC,WAAW,IAAA,kJAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n\n\n\n\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,kVAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6WAAC,mYAAsB;QACrB,KAAK;QACL,WAAW,IAAA,kJAAE,EACX,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6WAAC,wYAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,mYAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n\n\n\n\n\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,kPAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6WAAC;QAAI,WAAW,IAAA,kJAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from \"@supabase/ssr\";\n\nexport function createClient() {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Missing Supabase environment variables:\", {\n      url: !!supabaseUrl,\n      key: !!supabaseAnonKey,\n    });\n    throw new Error(\"Missing Supabase environment variables\");\n  }\n\n  return createBrowserClient(supabaseUrl, supabaseAnonKey);\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEO,SAAS;IACd,MAAM;IACN,MAAM;IAEN;;IAQA,OAAO,IAAA,8SAAmB,EAAC,aAAa;AAC1C","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/hooks/useAuth.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { type AuthUser, type UserProfile } from \"@/lib/supabase/types\";\n\nexport function useAuth() {\n  const [user, setUser] = useState<AuthUser | null>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const router = useRouter();\n  const supabase = createClient();\n\n  const fetchUserAndProfile = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data: { user: authUser },\n        error: authError,\n      } = await supabase.auth.getUser();\n\n      if (authError) throw authError;\n\n      if (authUser) {\n        const { data: profileData, error: profileError } = await supabase\n          .from(\"profiles\")\n          .select(\"*\")\n          .eq(\"auth_user_id\", authUser.id)\n          .single();\n\n        if (profileError && profileError.code !== \"PGRST116\") {\n          // PGRST116 means no rows found, which is fine if profile isn't created yet\n          throw profileError;\n        }\n\n        setUser(authUser);\n        setProfile(profileData || null);\n      } else {\n        setUser(null);\n        setProfile(null);\n      }\n    } catch (err: any) {\n      console.error(\"Error fetching user or profile:\", err.message);\n      setError(err.message || \"Failed to fetch user information.\");\n      setUser(null);\n      setProfile(null);\n    } finally {\n      setLoading(false);\n    }\n  }, [supabase]);\n\n  useEffect(() => {\n    fetchUserAndProfile();\n\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      if (event === \"SIGNED_IN\" || event === \"SIGNED_OUT\") {\n        fetchUserAndProfile();\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [supabase, fetchUserAndProfile]);\n\n  const signIn = async (email: string, password: string) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const { data, error: authError } = await supabase.auth.signInWithPassword(\n        {\n          email,\n          password,\n        }\n      );\n\n      if (authError) throw authError;\n\n      await fetchUserAndProfile(); // Re-fetch user and profile after successful sign-in\n      return { success: true, user: data.user };\n    } catch (err: any) {\n      console.error(\"Sign-in error:\", err.message);\n      setError(err.message || \"Login failed. Please check your credentials.\");\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const { error: authError } = await supabase.auth.signOut();\n      if (authError) throw authError;\n      setUser(null);\n      setProfile(null);\n      router.push(\"/auth/login\");\n      return { success: true };\n    } catch (err: any) {\n      console.error(\"Sign-out error:\", err.message);\n      setError(err.message || \"Failed to sign out.\");\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetPassword = async (email: string) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const { error: authError } = await supabase.auth.resetPasswordForEmail(\n        email,\n        {\n          redirectTo: `${window.location.origin}/auth/update-password`, // Or your update password page\n        }\n      );\n      if (authError) throw authError;\n      return { success: true };\n    } catch (err: any) {\n      console.error(\"Password reset error:\", err.message);\n      setError(err.message || \"Failed to send password reset email.\");\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isAuthenticated = useCallback(() => {\n    return !!user;\n  }, [user]);\n\n  return {\n    user,\n    profile,\n    loading,\n    error,\n    signIn,\n    signOut,\n    resetPassword,\n    isAuthenticated,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/hooks/useUserProgress.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { UserProgress } from \"@/lib/types/lms-content\";\n\nexport function useUserProgress(courseId?: string, sectionId?: string) {\n  const { user } = useAuth();\n  const [progress, setProgress] = useState<UserProgress[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      if (!user) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        const params = new URLSearchParams();\n        if (courseId) {\n          params.append(\"courseId\", courseId);\n        }\n        if (sectionId) {\n          params.append(\"sectionId\", sectionId);\n        }\n\n        const response = await fetch(`/api/user-progress?${params}`);\n\n        if (!response.ok) {\n          throw new Error(\n            `Failed to fetch user progress: ${response.statusText}`\n          );\n        }\n\n        const data = await response.json();\n\n        if (!data.success) {\n          throw new Error(data.error || \"Failed to fetch user progress\");\n        }\n\n        setProgress(data.data || []);\n      } catch (err) {\n        console.error(\"Error fetching user progress:\", err);\n        setError(\n          err instanceof Error ? err.message : \"Failed to fetch user progress\"\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProgress();\n  }, [user, courseId, sectionId]);\n\n  const createProgress = async (\n    progressData: Omit<UserProgress, \"id\" | \"createdAt\" | \"updatedAt\">\n  ) => {\n    try {\n      const response = await fetch(\"/api/user-progress\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(progressData),\n      });\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to create user progress: ${response.statusText}`\n        );\n      }\n\n      const data = await response.json();\n\n      if (!data.success) {\n        throw new Error(data.error || \"Failed to create user progress\");\n      }\n\n      // Refresh progress\n      setProgress(prev => [...prev, data.data]);\n      return data.data;\n    } catch (err) {\n      console.error(\"Error creating user progress:\", err);\n      throw err;\n    }\n  };\n\n  // Get course status for a specific course\n  const getCourseStatus = useCallback((courseId: string) => {\n    // For now, return default values since we don't have progress data loaded\n    // This prevents infinite loops while still providing the expected interface\n    return {\n      status: \"not_started\" as const,\n      progressPercent: 0,\n    };\n  }, []);\n\n  return {\n    progress,\n    loading,\n    error,\n    createProgress,\n    getCourseStatus,\n    refetch: () => {\n      if (user) {\n        setLoading(true);\n        setError(null);\n      }\n    },\n  };\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AAMO,SAAS,gBAAgB,QAAiB,EAAE,SAAkB;IACnE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,2JAAO;IACxB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAiB,EAAE;IAC3D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,gVAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,gVAAQ,EAAgB;IAElD,IAAA,iVAAS,EAAC;QACR,MAAM,gBAAgB;YACpB,IAAI,CAAC,MAAM;gBACT,WAAW;gBACX;YACF;YAEA,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,SAAS,IAAI;gBACnB,IAAI,UAAU;oBACZ,OAAO,MAAM,CAAC,YAAY;gBAC5B;gBACA,IAAI,WAAW;oBACb,OAAO,MAAM,CAAC,aAAa;gBAC7B;gBAEA,MAAM,WAAW,MAAM,MAAM,CAAC,mBAAmB,EAAE,QAAQ;gBAE3D,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MACR,CAAC,+BAA+B,EAAE,SAAS,UAAU,EAAE;gBAE3D;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;oBACjB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;gBAChC;gBAEA,YAAY,KAAK,IAAI,IAAI,EAAE;YAC7B,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C,SACE,eAAe,QAAQ,IAAI,OAAO,GAAG;YAEzC,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;QAAM;QAAU;KAAU;IAE9B,MAAM,iBAAiB,OACrB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,sBAAsB;gBACjD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MACR,CAAC,gCAAgC,EAAE,SAAS,UAAU,EAAE;YAE5D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;gBACjB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;YAEA,mBAAmB;YACnB,YAAY,CAAA,OAAQ;uBAAI;oBAAM,KAAK,IAAI;iBAAC;YACxC,OAAO,KAAK,IAAI;QAClB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,MAAM;QACR;IACF;IAEA,0CAA0C;IAC1C,MAAM,kBAAkB,IAAA,mVAAW,EAAC,CAAC;QACnC,0EAA0E;QAC1E,4EAA4E;QAC5E,OAAO;YACL,QAAQ;YACR,iBAAiB;QACnB;IACF,GAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA,SAAS;YACP,IAAI,MAAM;gBACR,WAAW;gBACX,SAAS;YACX;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/hooks/useCourseLearning.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { useUserProgress } from \"./useUserProgress\";\nimport { ContentBlock } from \"@/components/content/ContentBlockRenderer\";\n\nexport interface CourseSection {\n  id: string;\n  course_id: string;\n  section_key: string;\n  title: string;\n  order_index: number;\n  icon_name?: string;\n  is_published: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface QuizQuestion {\n  id: string;\n  section_id: string;\n  question_key: string;\n  question_type: \"true-false\" | \"multiple-choice\";\n  question_text: string;\n  options: Record<string, string>;\n  correct_answer: string;\n  explanation?: string;\n  order_index: number;\n  is_published: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface CourseLearningData {\n  course: {\n    id: string;\n    slug: string;\n    title: string;\n    description?: string;\n    version: string;\n    is_published: boolean;\n  };\n  sections: (CourseSection & {\n    blocks: ContentBlock[];\n    questions: QuizQuestion[];\n  })[];\n  currentSection?: CourseSection & {\n    blocks: ContentBlock[];\n    questions: QuizQuestion[];\n  };\n  progress: {\n    completedSections: string[];\n    currentSectionId?: string;\n    overallProgress: number;\n    timeSpent: number;\n    lastAccessed: Date;\n  };\n}\n\nexport interface ContentInteraction {\n  blockId: string;\n  interactionType:\n    | \"view\"\n    | \"click\"\n    | \"expand\"\n    | \"collapse\"\n    | \"download\"\n    | \"share\";\n  metadata?: Record<string, any>;\n}\n\nexport interface QuizAttempt {\n  questionId: string;\n  userAnswer: string;\n  isCorrect: boolean;\n  attemptedAt: Date;\n  timeSpent: number;\n}\n\nexport function useCourseLearning(courseSlug: string) {\n  const { user } = useAuth();\n  const { updateProgress, getCourseStatus } = useUserProgress();\n\n  const [learningData, setLearningData] = useState<CourseLearningData | null>(\n    null\n  );\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0);\n  const [interactions, setInteractions] = useState<ContentInteraction[]>([]);\n  const [quizAttempts, setQuizAttempts] = useState<QuizAttempt[]>([]);\n\n  // Fetch course learning data\n  const fetchCourseLearningData = useCallback(async () => {\n    if (!user) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch course details from public API\n      const courseResponse = await fetch(\n        `/api/public/courses?slug=${courseSlug}`\n      );\n      if (!courseResponse.ok) {\n        throw new Error(\"Failed to fetch course\");\n      }\n      const courseData = await courseResponse.json();\n\n      if (!courseData.success || !courseData.data.length) {\n        throw new Error(\"Course not found\");\n      }\n\n      const course = courseData.data[0];\n\n      // Fetch course sections with content blocks and questions from public API\n      const sectionsResponse = await fetch(\n        `/api/public/course-sections?courseId=${course.id}`\n      );\n      if (!sectionsResponse.ok) {\n        throw new Error(\"Failed to fetch course sections\");\n      }\n      const sectionsData = await sectionsResponse.json();\n\n      if (!sectionsData.success) {\n        throw new Error(\"Failed to fetch course sections\");\n      }\n\n      // Fetch content blocks for each section\n      const sectionsWithContent = await Promise.all(\n        sectionsData.data.map(async (section: CourseSection) => {\n          // Fetch content blocks from public API\n          const blocksResponse = await fetch(\n            `/api/public/content-blocks?sectionId=${section.id}`\n          );\n          const blocksData = blocksResponse.ok\n            ? await blocksResponse.json()\n            : { success: true, data: [] };\n\n          // Fetch quiz questions from public API\n          const questionsResponse = await fetch(\n            `/api/public/quiz-questions?sectionId=${section.id}`\n          );\n          const questionsData = questionsResponse.ok\n            ? await questionsResponse.json()\n            : { success: true, data: [] };\n\n          return {\n            ...section,\n            blocks: blocksData.success\n              ? blocksData.data.sort(\n                  (a: ContentBlock, b: ContentBlock) =>\n                    a.order_index - b.order_index\n                )\n              : [],\n            questions: questionsData.success\n              ? questionsData.data.sort(\n                  (a: QuizQuestion, b: QuizQuestion) =>\n                    a.order_index - b.order_index\n                )\n              : [],\n          };\n        })\n      );\n\n      // Sort sections by order_index\n      const sortedSections = sectionsWithContent.sort(\n        (a, b) => a.order_index - b.order_index\n      );\n\n      // Get user progress for this course\n      const userStatus = getCourseStatus(course.id);\n      const completedSections = userStatus.progress?.completedSections || [];\n\n      const learningData: CourseLearningData = {\n        course,\n        sections: sortedSections,\n        currentSection: sortedSections[0],\n        progress: {\n          completedSections,\n          currentSectionId: sortedSections[0]?.id,\n          overallProgress: userStatus.progressPercent,\n          timeSpent: userStatus.progress?.timeSpent || 0,\n          lastAccessed: userStatus.progress?.lastActiveAt\n            ? new Date(userStatus.progress.lastActiveAt)\n            : new Date(),\n        },\n      };\n\n      setLearningData(learningData);\n      setCurrentSectionIndex(0);\n    } catch (err) {\n      console.error(\"Error fetching course learning data:\", err);\n      setError(\n        err instanceof Error ? err.message : \"Failed to fetch course data\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [user, courseSlug, getCourseStatus]);\n\n  // Navigate to a specific section\n  const navigateToSection = useCallback(\n    (sectionIndex: number) => {\n      if (\n        !learningData ||\n        sectionIndex < 0 ||\n        sectionIndex >= learningData.sections.length\n      ) {\n        return;\n      }\n\n      const section = learningData.sections[sectionIndex];\n      setCurrentSectionIndex(sectionIndex);\n\n      setLearningData(prev =>\n        prev\n          ? {\n              ...prev,\n              currentSection: section,\n              progress: {\n                ...prev.progress,\n                currentSectionId: section.id,\n                lastAccessed: new Date(),\n              },\n            }\n          : null\n      );\n\n      // Track section view\n      trackInteraction({\n        blockId: section.id,\n        interactionType: \"view\",\n        metadata: { sectionKey: section.section_key, sectionIndex },\n      });\n    },\n    [learningData]\n  );\n\n  // Navigate to next section\n  const navigateToNextSection = useCallback(() => {\n    if (\n      learningData &&\n      currentSectionIndex < learningData.sections.length - 1\n    ) {\n      navigateToSection(currentSectionIndex + 1);\n    }\n  }, [learningData, currentSectionIndex, navigateToSection]);\n\n  // Navigate to previous section\n  const navigateToPreviousSection = useCallback(() => {\n    if (currentSectionIndex > 0) {\n      navigateToSection(currentSectionIndex - 1);\n    }\n  }, [currentSectionIndex, navigateToSection]);\n\n  // Mark section as complete\n  const markSectionComplete = useCallback(\n    async (sectionId: string) => {\n      if (!learningData) return;\n\n      // If user is not authenticated, just update local state\n      if (!user) {\n        const updatedCompletedSections = [\n          ...learningData.progress.completedSections,\n          sectionId,\n        ];\n        const overallProgress =\n          (updatedCompletedSections.length / learningData.sections.length) *\n          100;\n\n        setLearningData(prev =>\n          prev\n            ? {\n                ...prev,\n                progress: {\n                  ...prev.progress,\n                  completedSections: updatedCompletedSections,\n                  overallProgress,\n                },\n              }\n            : null\n        );\n        return;\n      }\n\n      try {\n        const response = await fetch(\"/api/user-progress\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userId: user.id,\n            courseId: learningData.course.id,\n            sectionId,\n            isCompleted: true,\n            completionPercentage: 100,\n            timeSpent: 0, // This should be calculated from actual time spent\n          }),\n        });\n\n        if (response.ok) {\n          const updatedCompletedSections = [\n            ...learningData.progress.completedSections,\n            sectionId,\n          ];\n          const overallProgress =\n            (updatedCompletedSections.length / learningData.sections.length) *\n            100;\n\n          setLearningData(prev =>\n            prev\n              ? {\n                  ...prev,\n                  progress: {\n                    ...prev.progress,\n                    completedSections: updatedCompletedSections,\n                    overallProgress,\n                  },\n                }\n              : null\n          );\n\n          // Update progress in user progress hook\n          updateProgress(learningData.course.id, {\n            status: overallProgress === 100 ? \"completed\" : \"in_progress\",\n            progressPercent: overallProgress,\n            completedSections: updatedCompletedSections,\n          });\n        }\n      } catch (err) {\n        console.error(\"Error marking section complete:\", err);\n      }\n    },\n    [learningData, user, updateProgress]\n  );\n\n  // Track content interactions\n  const trackInteraction = useCallback(\n    (interaction: ContentInteraction) => {\n      setInteractions(prev => [...prev, interaction]);\n\n      // Send interaction to server\n      fetch(\"/api/content-interactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userId: user?.id,\n          contentBlockId: interaction.blockId,\n          interactionType: interaction.interactionType,\n          metadata: interaction.metadata,\n        }),\n      }).catch(err => console.error(\"Error tracking interaction:\", err));\n    },\n    [user]\n  );\n\n  // Submit quiz answer\n  const submitQuizAnswer = useCallback(\n    async (questionId: string, userAnswer: string) => {\n      if (!learningData) return null;\n\n      // If user is not authenticated, just return the result without saving\n      if (!user) {\n        const question = learningData.sections\n          .flatMap(s => s.questions)\n          .find(q => q.id === questionId);\n\n        if (!question) {\n          return null;\n        }\n\n        const isCorrect = userAnswer === question.correct_answer;\n        const attempt: QuizAttempt = {\n          questionId,\n          userAnswer,\n          isCorrect,\n          attemptedAt: new Date(),\n          timeSpent: 0,\n        };\n\n        setQuizAttempts(prev => [...prev, attempt]);\n\n        return {\n          isCorrect,\n          correctAnswer: question.correct_answer,\n          explanation: question.explanation,\n        };\n      }\n\n      try {\n        const question = learningData.sections\n          .flatMap(s => s.questions)\n          .find(q => q.id === questionId);\n\n        if (!question) {\n          throw new Error(\"Question not found\");\n        }\n\n        const isCorrect = userAnswer === question.correct_answer;\n        const attempt: QuizAttempt = {\n          questionId,\n          userAnswer,\n          isCorrect,\n          attemptedAt: new Date(),\n          timeSpent: 0, // This should be calculated from actual time spent\n        };\n\n        setQuizAttempts(prev => [...prev, attempt]);\n\n        // Send quiz attempt to server\n        const response = await fetch(\"/api/quiz-attempts\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userId: user?.id,\n            quizQuestionId: questionId,\n            userAnswer,\n            isCorrect,\n            timeSpent: 0,\n          }),\n        });\n\n        if (!response.ok) {\n          console.error(\"Failed to save quiz attempt\");\n        }\n\n        return {\n          isCorrect,\n          correctAnswer: question.correct_answer,\n          explanation: question.explanation,\n        };\n      } catch (err) {\n        console.error(\"Error submitting quiz answer:\", err);\n        return null;\n      }\n    },\n    [learningData, user]\n  );\n\n  // Get quiz results for a section\n  const getSectionQuizResults = useCallback(\n    (sectionId: string) => {\n      const section = learningData?.sections.find(s => s.id === sectionId);\n      if (!section) return { total: 0, correct: 0, percentage: 0 };\n\n      const sectionAttempts = quizAttempts.filter(attempt =>\n        section.questions.some(q => q.id === attempt.questionId)\n      );\n\n      const correct = sectionAttempts.filter(\n        attempt => attempt.isCorrect\n      ).length;\n      const total = section.questions.length;\n      const percentage = total > 0 ? (correct / total) * 100 : 0;\n\n      return { total, correct, percentage };\n    },\n    [learningData, quizAttempts]\n  );\n\n  // Check if section is accessible (not locked by prerequisites)\n  const isSectionAccessible = useCallback(\n    (sectionIndex: number) => {\n      if (sectionIndex === 0) return true; // First section is always accessible\n\n      // Check if previous section is completed\n      const previousSection = learningData?.sections[sectionIndex - 1];\n      if (!previousSection) return false;\n\n      return (\n        learningData?.progress.completedSections.includes(previousSection.id) ||\n        false\n      );\n    },\n    [learningData]\n  );\n\n  useEffect(() => {\n    fetchCourseLearningData();\n  }, [fetchCourseLearningData]);\n\n  return {\n    learningData,\n    loading,\n    error,\n    currentSectionIndex,\n    navigateToSection,\n    navigateToNextSection,\n    navigateToPreviousSection,\n    markSectionComplete,\n    trackInteraction,\n    submitQuizAnswer,\n    getSectionQuizResults,\n    isSectionAccessible,\n    interactions,\n    quizAttempts,\n    refetch: fetchCourseLearningData,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 936, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/content/ContentBlockRenderer.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  Lightbulb,\n  Quote,\n  AlertCircle,\n} from \"lucide-react\";\n\n// Content block types from database schema\nexport type ContentBlockType =\n  | \"hero\"\n  | \"text\"\n  | \"card\"\n  | \"image\"\n  | \"table\"\n  | \"list\"\n  | \"grid\"\n  | \"callout\"\n  | \"quote\"\n  | \"divider\"\n  | \"video\"\n  | \"audio\";\n\nexport interface ContentBlock {\n  id: string;\n  section_id: string;\n  block_type: ContentBlockType;\n  order_index: number;\n  content: Record<string, any>;\n  metadata?: Record<string, any>;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface ContentInteraction {\n  blockId: string;\n  interactionType:\n    | \"view\"\n    | \"click\"\n    | \"expand\"\n    | \"collapse\"\n    | \"download\"\n    | \"share\";\n  metadata?: Record<string, any>;\n}\n\ninterface ContentBlockRendererProps {\n  block: ContentBlock;\n  sectionId: string;\n  onInteraction?: (interaction: ContentInteraction) => void;\n}\n\n// Hero Block Component\nfunction HeroBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { badge, title, subtitle } = content;\n  const backgroundClass =\n    metadata?.background === \"gradient-blue\"\n      ? \"bg-gradient-to-r from-blue-600 to-blue-800\"\n      : \"bg-gradient-to-r from-gray-600 to-gray-800\";\n\n  return (\n    <div className={`${backgroundClass} text-white rounded-lg p-8 mb-6`}>\n      {badge && (\n        <Badge\n          variant=\"secondary\"\n          className=\"mb-4 bg-white/20 text-white border-white/30\"\n        >\n          {badge}\n        </Badge>\n      )}\n      <h1 className=\"text-3xl font-bold mb-2\">{title}</h1>\n      {subtitle && <p className=\"text-xl opacity-90\">{subtitle}</p>}\n    </div>\n  );\n}\n\n// Text Block Component\nfunction TextBlock({ content }: { content: any }) {\n  return (\n    <div className=\"prose prose-gray dark:prose-invert max-w-none mb-6\">\n      <div dangerouslySetInnerHTML={{ __html: content.content }} />\n    </div>\n  );\n}\n\n// Card Block Component\nfunction CardBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { title, description, items } = content;\n\n  return (\n    <Card className=\"mb-6\">\n      <CardHeader>\n        {title && <CardTitle>{title}</CardTitle>}\n        {description && <p className=\"text-muted-foreground\">{description}</p>}\n      </CardHeader>\n      {items && (\n        <CardContent>\n          <div className=\"grid gap-4\">\n            {items.map((item: any, index: number) => (\n              <div key={index} className=\"flex items-start gap-3\">\n                <div className=\"w-2 h-2 bg-primary rounded-full mt-2 flex-shrink-0\" />\n                <div>\n                  <h4 className=\"font-medium\">{item.title}</h4>\n                  {item.description && (\n                    <p className=\"text-sm text-muted-foreground\">\n                      {item.description}\n                    </p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      )}\n    </Card>\n  );\n}\n\n// Image Block Component\nfunction ImageBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { src, alt, caption } = content;\n\n  return (\n    <div className=\"mb-6\">\n      <img\n        src={src}\n        alt={alt || \"\"}\n        className=\"w-full rounded-lg shadow-sm\"\n        loading=\"lazy\"\n      />\n      {caption && (\n        <p className=\"text-sm text-muted-foreground mt-2 text-center\">\n          {caption}\n        </p>\n      )}\n    </div>\n  );\n}\n\n// Table Block Component\nfunction TableBlock({ content }: { content: any }) {\n  const { headers, rows } = content;\n\n  return (\n    <div className=\"mb-6 overflow-x-auto\">\n      <table className=\"w-full border-collapse border border-border\">\n        <thead>\n          <tr className=\"bg-muted\">\n            {headers.map((header: string, index: number) => (\n              <th\n                key={index}\n                className=\"border border-border p-3 text-left font-medium\"\n              >\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row: string[], rowIndex: number) => (\n            <tr key={rowIndex} className=\"hover:bg-muted/50\">\n              {row.map((cell: string, cellIndex: number) => (\n                <td key={cellIndex} className=\"border border-border p-3\">\n                  {cell}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n// List Block Component\nfunction ListBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { items, type = \"unordered\" } = content;\n  const isOrdered = type === \"ordered\";\n\n  return (\n    <div className=\"mb-6\">\n      {isOrdered ? (\n        <ol className=\"list-decimal list-inside space-y-2\">\n          {items.map((item: string, index: number) => (\n            <li key={index} className=\"text-foreground\">\n              {item}\n            </li>\n          ))}\n        </ol>\n      ) : (\n        <ul className=\"list-disc list-inside space-y-2\">\n          {items.map((item: string, index: number) => (\n            <li key={index} className=\"text-foreground\">\n              {item}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n// Grid Block Component\nfunction GridBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { items, columns = 2 } = content;\n  const gridCols =\n    columns === 3\n      ? \"grid-cols-1 md:grid-cols-3\"\n      : columns === 4\n        ? \"grid-cols-1 md:grid-cols-2 lg:grid-cols-4\"\n        : \"grid-cols-1 md:grid-cols-2\";\n\n  return (\n    <div className={`grid ${gridCols} gap-4 mb-6`}>\n      {items.map((item: any, index: number) => (\n        <Card key={index} className=\"p-4\">\n          <CardContent className=\"p-0\">\n            {item.title && <h4 className=\"font-medium mb-2\">{item.title}</h4>}\n            {item.content && (\n              <p className=\"text-sm text-muted-foreground\">{item.content}</p>\n            )}\n            {item.image && (\n              <img\n                src={item.image}\n                alt={item.title || \"\"}\n                className=\"w-full rounded mt-2\"\n              />\n            )}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\n// Callout Block Component\nfunction CalloutBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { title, content: calloutContent } = content;\n  const type = metadata?.type || \"info\";\n\n  const getIcon = () => {\n    switch (type) {\n      case \"warning\":\n        return <AlertTriangle className=\"h-5 w-5\" />;\n      case \"error\":\n        return <AlertCircle className=\"h-5 w-5\" />;\n      case \"success\":\n        return <CheckCircle className=\"h-5 w-5\" />;\n      case \"tip\":\n        return <Lightbulb className=\"h-5 w-5\" />;\n      default:\n        return <Info className=\"h-5 w-5\" />;\n    }\n  };\n\n  const getBgColor = () => {\n    switch (type) {\n      case \"warning\":\n        return \"bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800\";\n      case \"error\":\n        return \"bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800\";\n      case \"success\":\n        return \"bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\";\n      case \"tip\":\n        return \"bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800\";\n      default:\n        return \"bg-gray-50 dark:bg-gray-900/20 border-gray-200 dark:border-gray-800\";\n    }\n  };\n\n  const getTextColor = () => {\n    switch (type) {\n      case \"warning\":\n        return \"text-yellow-800 dark:text-yellow-200\";\n      case \"error\":\n        return \"text-red-800 dark:text-red-200\";\n      case \"success\":\n        return \"text-green-800 dark:text-green-200\";\n      case \"tip\":\n        return \"text-blue-800 dark:text-blue-200\";\n      default:\n        return \"text-gray-800 dark:text-gray-200\";\n    }\n  };\n\n  return (\n    <div className={`${getBgColor()} border rounded-lg p-4 mb-6`}>\n      <div className=\"flex items-start gap-3\">\n        <div className={`${getTextColor()} mt-0.5`}>{getIcon()}</div>\n        <div className=\"flex-1\">\n          {title && (\n            <h4 className={`font-medium ${getTextColor()} mb-2`}>{title}</h4>\n          )}\n          <div className={`${getTextColor()} whitespace-pre-line`}>\n            {calloutContent}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Quote Block Component\nfunction QuoteBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { quote, author, title: authorTitle } = content;\n\n  return (\n    <div className=\"border-l-4 border-primary bg-muted/30 rounded-r-lg p-6 mb-6\">\n      <blockquote className=\"text-lg italic mb-4\">\"{quote}\"</blockquote>\n      {author && (\n        <div className=\"flex items-center gap-2\">\n          <Quote className=\"h-4 w-4 text-muted-foreground\" />\n          <div>\n            <p className=\"font-medium\">{author}</p>\n            {authorTitle && (\n              <p className=\"text-sm text-muted-foreground\">{authorTitle}</p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Divider Block Component\nfunction DividerBlock({ metadata }: { metadata?: any }) {\n  const style = metadata?.style || \"default\";\n\n  if (style === \"dotted\") {\n    return <div className=\"border-t-2 border-dotted border-border my-6\" />;\n  } else if (style === \"thick\") {\n    return <div className=\"border-t-4 border-border my-6\" />;\n  }\n\n  return <div className=\"border-t border-border my-6\" />;\n}\n\n// Video Block Component\nfunction VideoBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { src, title, description } = content;\n\n  return (\n    <div className=\"mb-6\">\n      <div className=\"relative w-full h-0 pb-[56.25%] bg-black rounded-lg overflow-hidden\">\n        <video\n          className=\"absolute top-0 left-0 w-full h-full\"\n          controls\n          preload=\"metadata\"\n        >\n          <source src={src} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n      </div>\n      {title && <h4 className=\"font-medium mt-2\">{title}</h4>}\n      {description && (\n        <p className=\"text-sm text-muted-foreground\">{description}</p>\n      )}\n    </div>\n  );\n}\n\n// Audio Block Component\nfunction AudioBlock({ content, metadata }: { content: any; metadata?: any }) {\n  const { src, title, description } = content;\n\n  return (\n    <div className=\"mb-6 p-4 border rounded-lg\">\n      <audio controls className=\"w-full mb-2\">\n        <source src={src} type=\"audio/mpeg\" />\n        Your browser does not support the audio tag.\n      </audio>\n      {title && <h4 className=\"font-medium\">{title}</h4>}\n      {description && (\n        <p className=\"text-sm text-muted-foreground\">{description}</p>\n      )}\n    </div>\n  );\n}\n\n// Main ContentBlockRenderer Component\nexport function ContentBlockRenderer({\n  block,\n  sectionId,\n  onInteraction,\n}: ContentBlockRendererProps) {\n  const handleInteraction = (\n    interactionType: ContentInteraction[\"interactionType\"],\n    metadata?: any\n  ) => {\n    if (onInteraction) {\n      onInteraction({\n        blockId: block.id,\n        interactionType,\n        metadata,\n      });\n    }\n  };\n\n  const renderBlock = () => {\n    switch (block.block_type) {\n      case \"hero\":\n        return <HeroBlock content={block.content} metadata={block.metadata} />;\n      case \"text\":\n        return <TextBlock content={block.content} />;\n      case \"card\":\n        return <CardBlock content={block.content} metadata={block.metadata} />;\n      case \"image\":\n        return <ImageBlock content={block.content} metadata={block.metadata} />;\n      case \"table\":\n        return <TableBlock content={block.content} />;\n      case \"list\":\n        return <ListBlock content={block.content} metadata={block.metadata} />;\n      case \"grid\":\n        return <GridBlock content={block.content} metadata={block.metadata} />;\n      case \"callout\":\n        return (\n          <CalloutBlock content={block.content} metadata={block.metadata} />\n        );\n      case \"quote\":\n        return <QuoteBlock content={block.content} metadata={block.metadata} />;\n      case \"divider\":\n        return <DividerBlock metadata={block.metadata} />;\n      case \"video\":\n        return <VideoBlock content={block.content} metadata={block.metadata} />;\n      case \"audio\":\n        return <AudioBlock content={block.content} metadata={block.metadata} />;\n      default:\n        return (\n          <div className=\"mb-6 p-4 border border-dashed border-muted-foreground rounded-lg\">\n            <p className=\"text-muted-foreground text-center\">\n              Unsupported block type: {block.block_type}\n            </p>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div\n      className=\"content-block\"\n      data-block-id={block.id}\n      onMouseEnter={() => handleInteraction(\"view\")}\n    >\n      {renderBlock()}\n    </div>\n  );\n}\n\n// Export individual components for testing\nexport {\n  HeroBlock,\n  TextBlock,\n  CardBlock,\n  ImageBlock,\n  TableBlock,\n  ListBlock,\n  GridBlock,\n  CalloutBlock,\n  QuoteBlock,\n  DividerBlock,\n  VideoBlock,\n  AudioBlock,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1789, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,kVAAgB,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC,oYAAqB;QACpB,WAAW,IAAA,kJAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6WAAC,qYAAsB;YACrB,WAAW,IAAA,kJAAE,EACX;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,oYAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1824, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,kPAAG,EACvB;AAGF,MAAM,sBAAQ,kVAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC,sYAAmB;QAClB,KAAK;QACL,WAAW,IAAA,kJAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,sYAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1855, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/course/CourseSidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  BookOpen,\n  CheckCircle,\n  Lock,\n  Clock,\n  PlayCircle,\n  ArrowRight,\n  Bookmark,\n  Target,\n  Unlock,\n} from \"lucide-react\";\nimport { CourseSection } from \"@/hooks/useCourseLearning\";\nimport { useState } from \"react\";\n\ninterface CourseSidebarProps {\n  sections: CourseSection[];\n  currentSectionId?: string;\n  completedSections: string[];\n  onSectionSelect: (sectionIndex: number) => void;\n  isSectionAccessible: (sectionIndex: number) => boolean;\n  overallProgress: number;\n  timeSpent: number;\n  courseTitle: string;\n}\n\nexport function CourseSidebar({\n  sections,\n  currentSectionId,\n  completedSections,\n  onSectionSelect,\n  isSectionAccessible,\n  overallProgress,\n  timeSpent,\n  courseTitle,\n}: CourseSidebarProps) {\n  const [demoMode, setDemoMode] = useState(false);\n\n  // Override section accessibility in demo mode\n  const isSectionAccessibleOverride = (index: number) => {\n    if (demoMode) return true; // Unlock all sections in demo mode\n    return isSectionAccessible(index);\n  };\n  const getSectionIcon = (iconName?: string) => {\n    switch (iconName) {\n      case \"book-open\":\n        return BookOpen;\n      case \"package\":\n        return Bookmark;\n      case \"alert-triangle\":\n        return Target;\n      case \"shield-check\":\n        return CheckCircle;\n      case \"search\":\n        return BookOpen;\n      case \"tag\":\n        return Bookmark;\n      case \"lock\":\n        return Lock;\n      case \"check-circle\":\n        return CheckCircle;\n      case \"bookmark\":\n        return Bookmark;\n      default:\n        return BookOpen;\n    }\n  };\n\n  const getSectionStatus = (section: CourseSection, index: number) => {\n    if (completedSections.includes(section.id)) {\n      return \"completed\";\n    }\n    if (section.id === currentSectionId) {\n      return \"current\";\n    }\n    if (isSectionAccessible(index)) {\n      return \"accessible\";\n    }\n    return \"locked\";\n  };\n\n  const formatTimeSpent = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  };\n\n  return (\n    <div className=\"w-80 space-y-6\">\n      {/* Course Progress Card */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-lg\">Course Progress</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span>Overall Progress</span>\n              <span>{Math.round(overallProgress)}%</span>\n            </div>\n            <Progress value={overallProgress} className=\"h-2\" />\n          </div>\n\n          <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n            <Clock className=\"h-4 w-4\" />\n            <span>Time spent: {formatTimeSpent(timeSpent)}</span>\n          </div>\n\n          <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n            <CheckCircle className=\"h-4 w-4\" />\n            <span>\n              {completedSections.length} of {sections.length} sections completed\n            </span>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Demo Mode Toggle */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-lg flex items-center gap-2\">\n            <Unlock className=\"h-5 w-5\" />\n            Demo Mode\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"demo-mode\"\n              checked={demoMode}\n              onCheckedChange={setDemoMode}\n            />\n            <Label htmlFor=\"demo-mode\" className=\"text-sm\">\n              Unlock all sections for testing\n            </Label>\n          </div>\n          {demoMode && (\n            <p className=\"text-xs text-muted-foreground\">\n              Demo mode allows you to access all sections without completing\n              prerequisites.\n            </p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Course Content Navigation */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-lg\">Course Content</CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-0\">\n          <div className=\"space-y-1\">\n            {sections.map((section, index) => {\n              const Icon = getSectionIcon(section.icon_name);\n              const status = getSectionStatus(section, index);\n              const isCurrent = section.id === currentSectionId;\n              const isCompleted = completedSections.includes(section.id);\n              const isAccessible = isSectionAccessibleOverride(index);\n\n              let buttonClasses = \"w-full justify-start text-left p-3 h-auto\";\n              let iconClasses = \"h-4 w-4 mr-3 flex-shrink-0\";\n              let textClasses = \"font-medium\";\n              let badgeClasses = \"\";\n\n              if (status === \"completed\") {\n                buttonClasses +=\n                  \" bg-green-50 hover:bg-green-100 dark:bg-green-900/20 dark:hover:bg-green-900/30\";\n                iconClasses += \" text-green-600 dark:text-green-400\";\n                textClasses += \" text-green-900 dark:text-green-100\";\n                badgeClasses =\n                  \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\";\n              } else if (status === \"current\") {\n                buttonClasses +=\n                  \" bg-primary/10 hover:bg-primary/20 border-primary/20\";\n                iconClasses += \" text-primary\";\n                textClasses += \" text-primary\";\n                badgeClasses = \"bg-primary/20 text-primary\";\n              } else if (status === \"accessible\") {\n                buttonClasses += \" hover:bg-muted\";\n                iconClasses += \" text-muted-foreground\";\n                textClasses += \" text-foreground\";\n              } else {\n                buttonClasses += \" opacity-50 cursor-not-allowed\";\n                iconClasses += \" text-muted-foreground\";\n                textClasses += \" text-muted-foreground\";\n              }\n\n              return (\n                <div key={section.id} className=\"relative\">\n                  <Button\n                    variant=\"ghost\"\n                    className={buttonClasses}\n                    onClick={() => isAccessible && onSectionSelect(index)}\n                    disabled={!isAccessible}\n                  >\n                    <div className=\"flex items-center w-full\">\n                      {isCompleted ? (\n                        <CheckCircle\n                          className={`${iconClasses} text-green-600 dark:text-green-400`}\n                        />\n                      ) : status === \"locked\" ? (\n                        <Lock className={`${iconClasses}`} />\n                      ) : (\n                        <Icon className={iconClasses} />\n                      )}\n\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`text-sm ${textClasses} truncate`}>\n                            {section.title}\n                          </span>\n                          {isCurrent && (\n                            <Badge variant=\"secondary\" className={badgeClasses}>\n                              Current\n                            </Badge>\n                          )}\n                          {isCompleted && (\n                            <Badge variant=\"secondary\" className={badgeClasses}>\n                              Complete\n                            </Badge>\n                          )}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground mt-1\">\n                          Section {index + 1}\n                        </div>\n                      </div>\n\n                      {status === \"accessible\" && !isCurrent && (\n                        <ArrowRight className=\"h-4 w-4 text-muted-foreground ml-2\" />\n                      )}\n                    </div>\n                  </Button>\n\n                  {/* Connection line to next section */}\n                  {index < sections.length - 1 && (\n                    <div className=\"absolute left-6 top-12 w-px h-4 bg-border\" />\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Quick Actions */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-lg\">Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <Button variant=\"outline\" className=\"w-full justify-start\">\n            <Bookmark className=\"h-4 w-4 mr-2\" />\n            Bookmark Current Section\n          </Button>\n\n          <Button variant=\"outline\" className=\"w-full justify-start\">\n            <Target className=\"h-4 w-4 mr-2\" />\n            View Learning Objectives\n          </Button>\n\n          <Button variant=\"outline\" className=\"w-full justify-start\">\n            <BookOpen className=\"h-4 w-4 mr-2\" />\n            Course Resources\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2424, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  );\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n});\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nexport { RadioGroup, RadioGroupItem };\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,kVAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6WAAC,yYAAwB;QACvB,WAAW,IAAA,kJAAE,EAAC,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,yYAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,kVAAgB,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6WAAC,yYAAwB;QACvB,KAAK;QACL,WAAW,IAAA,kJAAE,EACX,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6WAAC,8YAA6B;YAAC,WAAU;sBACvC,cAAA,6WAAC,oSAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,yYAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2484, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/components/quiz/QuizQuestion.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  CheckCircle,\n  XCircle,\n  ArrowRight,\n  ArrowLeft,\n  RotateCcw,\n} from \"lucide-react\";\nimport { QuizQuestion as QuizQuestionType } from \"@/hooks/useCourseLearning\";\n\ninterface QuizQuestionProps {\n  question: QuizQuestionType;\n  onAnswer: (answer: string) => void;\n  onNext: () => void;\n  onPrevious?: () => void;\n  hasNext: boolean;\n  hasPrevious: boolean;\n  userAnswer?: string;\n  showFeedback?: boolean;\n  isCorrect?: boolean;\n  explanation?: string;\n}\n\nexport function QuizQuestion({\n  question,\n  onAnswer,\n  onNext,\n  onPrevious,\n  hasNext,\n  hasPrevious,\n  userAnswer,\n  showFeedback,\n  isCorrect,\n  explanation,\n}: QuizQuestionProps) {\n  const [selectedAnswer, setSelectedAnswer] = useState<string>(\n    userAnswer || \"\"\n  );\n  const [submitted, setSubmitted] = useState(showFeedback || false);\n\n  const handleAnswerSelect = (answer: string) => {\n    setSelectedAnswer(answer);\n    if (!submitted) {\n      onAnswer(answer);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (selectedAnswer && !submitted) {\n      setSubmitted(true);\n    }\n  };\n\n  const handleNext = () => {\n    if (submitted) {\n      onNext();\n    } else if (selectedAnswer) {\n      handleSubmit();\n    }\n  };\n\n  const handleRetry = () => {\n    setSelectedAnswer(\"\");\n    setSubmitted(false);\n  };\n\n  const getOptionLabel = (key: string, value: string) => {\n    if (question.question_type === \"true-false\") {\n      return value;\n    }\n    return `${key.toUpperCase()}. ${value}`;\n  };\n\n  const getFeedbackIcon = () => {\n    if (submitted && isCorrect !== undefined) {\n      return isCorrect ? (\n        <CheckCircle className=\"h-6 w-6 text-green-500\" />\n      ) : (\n        <XCircle className=\"h-6 w-6 text-red-500\" />\n      );\n    }\n    return null;\n  };\n\n  const getFeedbackColor = () => {\n    if (submitted && isCorrect !== undefined) {\n      return isCorrect\n        ? \"border-green-200 bg-green-50 dark:bg-green-900/20\"\n        : \"border-red-200 bg-red-50 dark:bg-red-900/20\";\n    }\n    return \"border-border\";\n  };\n\n  return (\n    <Card className={`mb-6 transition-colors ${getFeedbackColor()}`}>\n      <CardHeader>\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <CardTitle className=\"text-lg leading-relaxed\">\n              {question.question_text}\n            </CardTitle>\n            <div className=\"mt-2 flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">\n                Question {question.order_index}\n              </span>\n              {getFeedbackIcon()}\n            </div>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-6\">\n        {/* Answer Options */}\n        <div className=\"space-y-3\">\n          <RadioGroup\n            value={selectedAnswer}\n            onValueChange={handleAnswerSelect}\n            disabled={submitted}\n            className=\"space-y-3\"\n          >\n            {Object.entries(question.options).map(([key, value]) => {\n              const isSelected = selectedAnswer === key;\n              const isCorrectAnswer = key === question.correct_answer;\n\n              let optionClasses =\n                \"flex items-center space-x-3 p-4 rounded-lg border transition-colors cursor-pointer\";\n\n              if (submitted) {\n                if (isCorrectAnswer) {\n                  optionClasses +=\n                    \" border-green-300 bg-green-50 dark:bg-green-900/20\";\n                } else if (isSelected && !isCorrectAnswer) {\n                  optionClasses +=\n                    \" border-red-300 bg-red-50 dark:bg-red-900/20\";\n                } else {\n                  optionClasses +=\n                    \" border-gray-200 bg-gray-50 dark:bg-gray-900/20\";\n                }\n              } else if (isSelected) {\n                optionClasses += \" border-primary bg-primary/5\";\n              } else {\n                optionClasses += \" border-border hover:border-primary/50\";\n              }\n\n              return (\n                <div key={key} className={optionClasses}>\n                  <RadioGroupItem\n                    value={key}\n                    id={key}\n                    className=\"flex-shrink-0\"\n                  />\n                  <Label\n                    htmlFor={key}\n                    className=\"flex-1 cursor-pointer font-normal\"\n                  >\n                    {getOptionLabel(key, value)}\n                  </Label>\n                  {submitted && isCorrectAnswer && (\n                    <CheckCircle className=\"h-5 w-5 text-green-500 flex-shrink-0\" />\n                  )}\n                  {submitted && isSelected && !isCorrectAnswer && (\n                    <XCircle className=\"h-5 w-5 text-red-500 flex-shrink-0\" />\n                  )}\n                </div>\n              );\n            })}\n          </RadioGroup>\n        </div>\n\n        {/* Feedback Section */}\n        {submitted && (\n          <div className=\"space-y-4\">\n            {/* Correct Answer Indicator */}\n            <div\n              className={`p-4 rounded-lg ${isCorrect ? \"bg-green-50 dark:bg-green-900/20\" : \"bg-red-50 dark:bg-red-900/20\"}`}\n            >\n              <div className=\"flex items-center gap-2 mb-2\">\n                {isCorrect ? (\n                  <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                ) : (\n                  <XCircle className=\"h-5 w-5 text-red-500\" />\n                )}\n                <span\n                  className={`font-medium ${isCorrect ? \"text-green-800 dark:text-green-200\" : \"text-red-800 dark:text-red-200\"}`}\n                >\n                  {isCorrect ? \"Correct!\" : \"Incorrect\"}\n                </span>\n              </div>\n\n              {!isCorrect && (\n                <p className=\"text-sm text-muted-foreground mb-2\">\n                  The correct answer is:{\" \"}\n                  <span className=\"font-medium\">\n                    {getOptionLabel(\n                      question.correct_answer,\n                      question.options[question.correct_answer]\n                    )}\n                  </span>\n                </p>\n              )}\n            </div>\n\n            {/* Explanation */}\n            {explanation && (\n              <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                  Explanation\n                </h4>\n                <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                  {explanation}\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex items-center justify-between pt-4 border-t\">\n          <div className=\"flex items-center gap-2\">\n            {hasPrevious && onPrevious && (\n              <Button\n                variant=\"outline\"\n                onClick={onPrevious}\n                className=\"flex items-center gap-2\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                Previous\n              </Button>\n            )}\n\n            {submitted && !isCorrect && (\n              <Button\n                variant=\"outline\"\n                onClick={handleRetry}\n                className=\"flex items-center gap-2\"\n              >\n                <RotateCcw className=\"h-4 w-4\" />\n                Try Again\n              </Button>\n            )}\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            {!submitted ? (\n              <Button\n                onClick={handleSubmit}\n                disabled={!selectedAnswer}\n                className=\"flex items-center gap-2\"\n              >\n                Submit Answer\n              </Button>\n            ) : (\n              <Button\n                onClick={handleNext}\n                disabled={!hasNext}\n                className=\"flex items-center gap-2\"\n              >\n                {hasNext ? (\n                  <>\n                    Next Question\n                    <ArrowRight className=\"h-4 w-4\" />\n                  </>\n                ) : (\n                  \"Complete Quiz\"\n                )}\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Quiz Progress Component\ninterface QuizProgressProps {\n  currentQuestion: number;\n  totalQuestions: number;\n  correctAnswers: number;\n}\n\nexport function QuizProgress({\n  currentQuestion,\n  totalQuestions,\n  correctAnswers,\n}: QuizProgressProps) {\n  const progress = (currentQuestion / totalQuestions) * 100;\n  const score =\n    totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0;\n\n  return (\n    <div className=\"mb-6 space-y-3\">\n      <div className=\"flex items-center justify-between\">\n        <span className=\"text-sm font-medium\">Quiz Progress</span>\n        <span className=\"text-sm text-muted-foreground\">\n          {currentQuestion} of {totalQuestions} questions\n        </span>\n      </div>\n\n      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n        <div\n          className=\"bg-primary h-2 rounded-full transition-all duration-300\"\n          style={{ width: `${progress}%` }}\n        />\n      </div>\n\n      <div className=\"flex items-center justify-between text-sm\">\n        <span className=\"text-muted-foreground\">\n          Progress: {Math.round(progress)}%\n        </span>\n        {currentQuestion > 0 && (\n          <span className=\"text-muted-foreground\">\n            Score: {correctAnswers}/{currentQuestion} ({Math.round(score)}%)\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Quiz Results Component\ninterface QuizResultsProps {\n  totalQuestions: number;\n  correctAnswers: number;\n  onRetake: () => void;\n  onContinue: () => void;\n  passingScore?: number;\n}\n\nexport function QuizResults({\n  totalQuestions,\n  correctAnswers,\n  onRetake,\n  onContinue,\n  passingScore = 80,\n}: QuizResultsProps) {\n  const score = (correctAnswers / totalQuestions) * 100;\n  const passed = score >= passingScore;\n\n  return (\n    <Card className=\"mb-6\">\n      <CardHeader>\n        <CardTitle className=\"text-center\">Quiz Complete</CardTitle>\n      </CardHeader>\n\n      <CardContent className=\"space-y-6\">\n        {/* Score Display */}\n        <div className=\"text-center\">\n          <div\n            className={`inline-flex items-center justify-center w-24 h-24 rounded-full text-3xl font-bold mb-4 ${\n              passed\n                ? \"bg-green-100 text-green-600 dark:bg-green-900/20 dark:text-green-400\"\n                : \"bg-red-100 text-red-600 dark:bg-red-900/20 dark:text-red-400\"\n            }`}\n          >\n            {Math.round(score)}%\n          </div>\n\n          <h3\n            className={`text-xl font-semibold mb-2 ${passed ? \"text-green-600 dark:text-green-400\" : \"text-red-600 dark:text-red-400\"}`}\n          >\n            {passed ? \"Congratulations!\" : \"Keep Learning!\"}\n          </h3>\n\n          <p className=\"text-muted-foreground\">\n            You answered {correctAnswers} out of {totalQuestions} questions\n            correctly.\n          </p>\n\n          {!passed && (\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              You need {passingScore}% to pass. Review the material and try\n              again.\n            </p>\n          )}\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex items-center justify-center gap-4\">\n          {!passed && (\n            <Button\n              variant=\"outline\"\n              onClick={onRetake}\n              className=\"flex items-center gap-2\"\n            >\n              <RotateCcw className=\"h-4 w-4\" />\n              Retake Quiz\n            </Button>\n          )}\n\n          <Button onClick={onContinue} className=\"flex items-center gap-2\">\n            {passed ? \"Continue to Next Section\" : \"Review Material\"}\n            <ArrowRight className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3134, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/app/courses/%5Bslug%5D/learn/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  ArrowLeft,\n  ArrowRight,\n  CheckCircle,\n  Clock,\n  BookOpen,\n  PlayCircle,\n  AlertCircle,\n  Loader2,\n  Home,\n  Menu,\n} from \"lucide-react\";\nimport { useCourseLearning } from \"@/hooks/useCourseLearning\";\nimport { ContentBlockRenderer } from \"@/components/content/ContentBlockRenderer\";\nimport { CourseSidebar } from \"@/components/course/CourseSidebar\";\nimport {\n  QuizQuestion,\n  QuizProgress,\n  QuizResults,\n} from \"@/components/quiz/QuizQuestion\";\n\nexport default function CourseLearningPage() {\n  const params = useParams();\n  const router = useRouter();\n  const courseSlug = params.slug as string;\n\n  const {\n    learningData,\n    loading,\n    error,\n    currentSectionIndex,\n    navigateToSection,\n    navigateToNextSection,\n    navigateToPreviousSection,\n    markSectionComplete,\n    trackInteraction,\n    submitQuizAnswer,\n    getSectionQuizResults,\n    isSectionAccessible,\n    quizAttempts,\n  } = useCourseLearning(courseSlug);\n\n  const [showQuiz, setShowQuiz] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [quizAnswers, setQuizAnswers] = useState<Record<string, string>>({});\n  const [showQuizResults, setShowQuizResults] = useState(false);\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold mb-2\">Loading Course</h2>\n          <p className=\"text-muted-foreground\">\n            Please wait while we load your learning content...\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error || !learningData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center max-w-md\">\n          <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold mb-2\">Error Loading Course</h2>\n          <p className=\"text-muted-foreground mb-6\">\n            {error || \"Course not found\"}\n          </p>\n          <div className=\"space-x-4\">\n            <Button onClick={() => router.push(\"/courses\")}>\n              <Home className=\"h-4 w-4 mr-2\" />\n              Back to Courses\n            </Button>\n            <Button variant=\"outline\" onClick={() => window.location.reload()}>\n              Try Again\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const { course, sections, currentSection, progress } = learningData;\n  const currentSectionData = sections[currentSectionIndex];\n  const hasQuiz =\n    currentSectionData?.questions && currentSectionData.questions.length > 0;\n  const isSectionComplete = progress.completedSections.includes(\n    currentSectionData?.id || \"\"\n  );\n\n  // Quiz handling functions\n  const handleQuizStart = () => {\n    setShowQuiz(true);\n    setCurrentQuestionIndex(0);\n    setQuizAnswers({});\n    setShowQuizResults(false);\n  };\n\n  const handleQuizAnswer = (questionId: string, answer: string) => {\n    setQuizAnswers(prev => ({ ...prev, [questionId]: answer }));\n  };\n\n  const handleQuizNext = async () => {\n    if (currentSectionData?.questions) {\n      const currentQuestion =\n        currentSectionData.questions[currentQuestionIndex];\n\n      // Submit current answer if not already submitted\n      if (!quizAnswers[currentQuestion.id]) {\n        const answer = quizAnswers[currentQuestion.id];\n        if (answer) {\n          await submitQuizAnswer(currentQuestion.id, answer);\n        }\n      }\n\n      if (currentQuestionIndex < currentSectionData.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        // Quiz completed\n        setShowQuizResults(true);\n      }\n    }\n  };\n\n  const handleQuizRetake = () => {\n    setCurrentQuestionIndex(0);\n    setQuizAnswers({});\n    setShowQuizResults(false);\n  };\n\n  const handleQuizContinue = () => {\n    setShowQuiz(false);\n    setShowQuizResults(false);\n    // Mark section as complete if quiz passed\n    if (currentSectionData?.id) {\n      markSectionComplete(currentSectionData.id);\n    }\n  };\n\n  const handleSectionComplete = async () => {\n    if (currentSectionData?.id) {\n      await markSectionComplete(currentSectionData.id);\n\n      // Move to next section if available\n      if (currentSectionIndex < sections.length - 1) {\n        navigateToNextSection();\n      } else {\n        // Course completed\n        router.push(`/courses/${courseSlug}/complete`);\n      }\n    }\n  };\n\n  const formatTimeSpent = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  };\n\n  // Quiz results calculation\n  const quizResults = currentSectionData\n    ? getSectionQuizResults(currentSectionData.id)\n    : { total: 0, correct: 0, percentage: 0 };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-border\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center gap-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => router.push(`/courses/${courseSlug}`)}\n                className=\"flex items-center gap-2\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                Back to Course\n              </Button>\n\n              <div className=\"hidden sm:block\">\n                <h1 className=\"text-lg font-semibold truncate max-w-md\">\n                  {course.title}\n                </h1>\n                <p className=\"text-sm text-muted-foreground\">\n                  {currentSectionData?.title}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden sm:flex items-center gap-2 text-sm text-muted-foreground\">\n                <Clock className=\"h-4 w-4\" />\n                <span>{formatTimeSpent(progress.timeSpent)}</span>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm font-medium\">\n                  {Math.round(progress.overallProgress)}%\n                </span>\n                <Progress\n                  value={progress.overallProgress}\n                  className=\"w-20 h-2\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex gap-8\">\n          {/* Sidebar */}\n          <div className=\"hidden lg:block\">\n            <CourseSidebar\n              sections={sections}\n              currentSectionId={currentSectionData?.id}\n              completedSections={progress.completedSections}\n              onSectionSelect={navigateToSection}\n              isSectionAccessible={isSectionAccessible}\n              overallProgress={progress.overallProgress}\n              timeSpent={progress.timeSpent}\n              courseTitle={course.title}\n            />\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 min-w-0\">\n            {!showQuiz ? (\n              <div className=\"space-y-6\">\n                {/* Section Header */}\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <CardTitle className=\"flex items-center gap-3\">\n                          <BookOpen className=\"h-6 w-6\" />\n                          {currentSectionData?.title}\n                        </CardTitle>\n                        <p className=\"text-muted-foreground mt-2\">\n                          Section {currentSectionIndex + 1} of {sections.length}\n                        </p>\n                      </div>\n\n                      {isSectionComplete ? (\n                        <Badge\n                          variant=\"secondary\"\n                          className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n                        >\n                          <CheckCircle className=\"h-4 w-4 mr-1\" />\n                          Completed\n                        </Badge>\n                      ) : (\n                        <Badge variant=\"outline\" className=\"text-sm\">\n                          Click \"Mark Complete\" to unlock next section\n                        </Badge>\n                      )}\n                    </div>\n                  </CardHeader>\n                </Card>\n\n                {/* Content Blocks */}\n                <div className=\"space-y-6\">\n                  {currentSectionData?.blocks.map(block => (\n                    <ContentBlockRenderer\n                      key={block.id}\n                      block={block}\n                      sectionId={currentSectionData.id}\n                      onInteraction={trackInteraction}\n                    />\n                  ))}\n                </div>\n\n                {/* Section Navigation */}\n                <Card>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <Button\n                        variant=\"outline\"\n                        onClick={navigateToPreviousSection}\n                        disabled={currentSectionIndex === 0}\n                        className=\"flex items-center gap-2\"\n                      >\n                        <ArrowLeft className=\"h-4 w-4\" />\n                        Previous Section\n                      </Button>\n\n                      <div className=\"flex items-center gap-3\">\n                        {hasQuiz && !isSectionComplete && (\n                          <Button\n                            variant=\"outline\"\n                            onClick={handleQuizStart}\n                            className=\"flex items-center gap-2\"\n                          >\n                            <PlayCircle className=\"h-4 w-4\" />\n                            Take Quiz\n                          </Button>\n                        )}\n\n                        <Button\n                          onClick={handleSectionComplete}\n                          disabled={isSectionComplete}\n                          className=\"flex items-center gap-2\"\n                        >\n                          {isSectionComplete ? (\n                            <>\n                              <CheckCircle className=\"h-4 w-4\" />\n                              Section Complete\n                            </>\n                          ) : currentSectionIndex === sections.length - 1 ? (\n                            <>\n                              <CheckCircle className=\"h-4 w-4\" />\n                              Complete Course\n                            </>\n                          ) : (\n                            <>\n                              <CheckCircle className=\"h-4 w-4\" />\n                              Mark Complete\n                            </>\n                          )}\n                        </Button>\n                      </div>\n\n                      <Button\n                        onClick={navigateToNextSection}\n                        disabled={\n                          currentSectionIndex === sections.length - 1 ||\n                          !isSectionAccessible(currentSectionIndex + 1)\n                        }\n                        className=\"flex items-center gap-2\"\n                      >\n                        Next Section\n                        <ArrowRight className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            ) : showQuizResults ? (\n              /* Quiz Results */\n              <QuizResults\n                totalQuestions={quizResults.total}\n                correctAnswers={quizResults.correct}\n                onRetake={handleQuizRetake}\n                onContinue={handleQuizContinue}\n                passingScore={80}\n              />\n            ) : (\n              /* Quiz Interface */\n              <div className=\"space-y-6\">\n                <QuizProgress\n                  currentQuestion={currentQuestionIndex + 1}\n                  totalQuestions={currentSectionData?.questions?.length || 0}\n                  correctAnswers={quizResults.correct}\n                />\n\n                {currentSectionData?.questions &&\n                  currentSectionData.questions[currentQuestionIndex] && (\n                    <QuizQuestion\n                      question={\n                        currentSectionData.questions[currentQuestionIndex]\n                      }\n                      onAnswer={answer =>\n                        handleQuizAnswer(\n                          currentSectionData.questions[currentQuestionIndex].id,\n                          answer\n                        )\n                      }\n                      onNext={handleQuizNext}\n                      hasNext={\n                        currentQuestionIndex <\n                        currentSectionData.questions.length - 1\n                      }\n                      userAnswer={\n                        quizAnswers[\n                          currentSectionData.questions[currentQuestionIndex].id\n                        ]\n                      }\n                    />\n                  )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAvBA;;;;;;;;;;;;;AA6Be,SAAS;IACtB,MAAM,SAAS,IAAA,8QAAS;IACxB,MAAM,SAAS,IAAA,8QAAS;IACxB,MAAM,aAAa,OAAO,IAAI;IAE9B,MAAM,EACJ,YAAY,EACZ,OAAO,EACP,KAAK,EACL,mBAAmB,EACnB,iBAAiB,EACjB,qBAAqB,EACrB,yBAAyB,EACzB,mBAAmB,EACnB,gBAAgB,EAChB,gBAAgB,EAChB,qBAAqB,EACrB,mBAAmB,EACnB,YAAY,EACb,GAAG,IAAA,+KAAiB,EAAC;IAEtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAC;IACzC,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,gVAAQ,EAAC;IACjE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,gVAAQ,EAAyB,CAAC;IACxE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,gVAAQ,EAAC;IAEvD,qBAAqB;IACrB,IAAI,SAAS;QACX,qBACE,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,gTAAO;wBAAC,WAAU;;;;;;kCACnB,6WAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,6WAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAM7C;IAEA,mBAAmB;IACnB,IAAI,SAAS,CAAC,cAAc;QAC1B,qBACE,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,uTAAW;wBAAC,WAAU;;;;;;kCACvB,6WAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,6WAAC;wBAAE,WAAU;kCACV,SAAS;;;;;;kCAEZ,6WAAC;wBAAI,WAAU;;0CACb,6WAAC,qKAAM;gCAAC,SAAS,IAAM,OAAO,IAAI,CAAC;;kDACjC,6WAAC,+RAAI;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGnC,6WAAC,qKAAM;gCAAC,SAAQ;gCAAU,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;0CAAI;;;;;;;;;;;;;;;;;;;;;;;IAO7E;IAEA,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,GAAG;IACvD,MAAM,qBAAqB,QAAQ,CAAC,oBAAoB;IACxD,MAAM,UACJ,oBAAoB,aAAa,mBAAmB,SAAS,CAAC,MAAM,GAAG;IACzE,MAAM,oBAAoB,SAAS,iBAAiB,CAAC,QAAQ,CAC3D,oBAAoB,MAAM;IAG5B,0BAA0B;IAC1B,MAAM,kBAAkB;QACtB,YAAY;QACZ,wBAAwB;QACxB,eAAe,CAAC;QAChB,mBAAmB;IACrB;IAEA,MAAM,mBAAmB,CAAC,YAAoB;QAC5C,eAAe,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,WAAW,EAAE;YAAO,CAAC;IAC3D;IAEA,MAAM,iBAAiB;QACrB,IAAI,oBAAoB,WAAW;YACjC,MAAM,kBACJ,mBAAmB,SAAS,CAAC,qBAAqB;YAEpD,iDAAiD;YACjD,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,EAAE;gBACpC,MAAM,SAAS,WAAW,CAAC,gBAAgB,EAAE,CAAC;gBAC9C,IAAI,QAAQ;oBACV,MAAM,iBAAiB,gBAAgB,EAAE,EAAE;gBAC7C;YACF;YAEA,IAAI,uBAAuB,mBAAmB,SAAS,CAAC,MAAM,GAAG,GAAG;gBAClE,wBAAwB,uBAAuB;YACjD,OAAO;gBACL,iBAAiB;gBACjB,mBAAmB;YACrB;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB,wBAAwB;QACxB,eAAe,CAAC;QAChB,mBAAmB;IACrB;IAEA,MAAM,qBAAqB;QACzB,YAAY;QACZ,mBAAmB;QACnB,0CAA0C;QAC1C,IAAI,oBAAoB,IAAI;YAC1B,oBAAoB,mBAAmB,EAAE;QAC3C;IACF;IAEA,MAAM,wBAAwB;QAC5B,IAAI,oBAAoB,IAAI;YAC1B,MAAM,oBAAoB,mBAAmB,EAAE;YAE/C,oCAAoC;YACpC,IAAI,sBAAsB,SAAS,MAAM,GAAG,GAAG;gBAC7C;YACF,OAAO;gBACL,mBAAmB;gBACnB,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,WAAW,SAAS,CAAC;YAC/C;QACF;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;QACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;QAE9C,IAAI,QAAQ,GAAG;YACb,OAAO,GAAG,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;QAChC;QACA,OAAO,GAAG,QAAQ,CAAC,CAAC;IACtB;IAEA,2BAA2B;IAC3B,MAAM,cAAc,qBAChB,sBAAsB,mBAAmB,EAAE,IAC3C;QAAE,OAAO;QAAG,SAAS;QAAG,YAAY;IAAE;IAE1C,qBACE,6WAAC;QAAI,WAAU;;0BAEb,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;kDACb,6WAAC,qKAAM;wCACL,SAAQ;wCACR,MAAK;wCACL,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,YAAY;wCACnD,WAAU;;0DAEV,6WAAC,iTAAS;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAInC,6WAAC;wCAAI,WAAU;;0DACb,6WAAC;gDAAG,WAAU;0DACX,OAAO,KAAK;;;;;;0DAEf,6WAAC;gDAAE,WAAU;0DACV,oBAAoB;;;;;;;;;;;;;;;;;;0CAK3B,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;;0DACb,6WAAC,iSAAK;gDAAC,WAAU;;;;;;0DACjB,6WAAC;0DAAM,gBAAgB,SAAS,SAAS;;;;;;;;;;;;kDAG3C,6WAAC;wCAAI,WAAU;;0DACb,6WAAC;gDAAK,WAAU;;oDACb,KAAK,KAAK,CAAC,SAAS,eAAe;oDAAE;;;;;;;0DAExC,6WAAC,yKAAQ;gDACP,OAAO,SAAS,eAAe;gDAC/B,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQtB,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCAEb,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC,uLAAa;gCACZ,UAAU;gCACV,kBAAkB,oBAAoB;gCACtC,mBAAmB,SAAS,iBAAiB;gCAC7C,iBAAiB;gCACjB,qBAAqB;gCACrB,iBAAiB,SAAS,eAAe;gCACzC,WAAW,SAAS,SAAS;gCAC7B,aAAa,OAAO,KAAK;;;;;;;;;;;sCAK7B,6WAAC;4BAAI,WAAU;sCACZ,CAAC,yBACA,6WAAC;gCAAI,WAAU;;kDAEb,6WAAC,iKAAI;kDACH,cAAA,6WAAC,uKAAU;sDACT,cAAA,6WAAC;gDAAI,WAAU;;kEACb,6WAAC;;0EACC,6WAAC,sKAAS;gEAAC,WAAU;;kFACnB,6WAAC,8SAAQ;wEAAC,WAAU;;;;;;oEACnB,oBAAoB;;;;;;;0EAEvB,6WAAC;gEAAE,WAAU;;oEAA6B;oEAC/B,sBAAsB;oEAAE;oEAAK,SAAS,MAAM;;;;;;;;;;;;;oDAIxD,kCACC,6WAAC,mKAAK;wDACJ,SAAQ;wDACR,WAAU;;0EAEV,6WAAC,8TAAW;gEAAC,WAAU;;;;;;4DAAiB;;;;;;6EAI1C,6WAAC,mKAAK;wDAAC,SAAQ;wDAAU,WAAU;kEAAU;;;;;;;;;;;;;;;;;;;;;;kDASrD,6WAAC;wCAAI,WAAU;kDACZ,oBAAoB,OAAO,IAAI,CAAA,sBAC9B,6WAAC,sMAAoB;gDAEnB,OAAO;gDACP,WAAW,mBAAmB,EAAE;gDAChC,eAAe;+CAHV,MAAM,EAAE;;;;;;;;;;kDASnB,6WAAC,iKAAI;kDACH,cAAA,6WAAC,wKAAW;4CAAC,WAAU;sDACrB,cAAA,6WAAC;gDAAI,WAAU;;kEACb,6WAAC,qKAAM;wDACL,SAAQ;wDACR,SAAS;wDACT,UAAU,wBAAwB;wDAClC,WAAU;;0EAEV,6WAAC,iTAAS;gEAAC,WAAU;;;;;;4DAAY;;;;;;;kEAInC,6WAAC;wDAAI,WAAU;;4DACZ,WAAW,CAAC,mCACX,6WAAC,qKAAM;gEACL,SAAQ;gEACR,SAAS;gEACT,WAAU;;kFAEV,6WAAC,oTAAU;wEAAC,WAAU;;;;;;oEAAY;;;;;;;0EAKtC,6WAAC,qKAAM;gEACL,SAAS;gEACT,UAAU;gEACV,WAAU;0EAET,kCACC;;sFACE,6WAAC,8TAAW;4EAAC,WAAU;;;;;;wEAAY;;mFAGnC,wBAAwB,SAAS,MAAM,GAAG,kBAC5C;;sFACE,6WAAC,8TAAW;4EAAC,WAAU;;;;;;wEAAY;;iGAIrC;;sFACE,6WAAC,8TAAW;4EAAC,WAAU;;;;;;wEAAY;;;;;;;;;;;;;;kEAO3C,6WAAC,qKAAM;wDACL,SAAS;wDACT,UACE,wBAAwB,SAAS,MAAM,GAAG,KAC1C,CAAC,oBAAoB,sBAAsB;wDAE7C,WAAU;;4DACX;0EAEC,6WAAC,oTAAU;gEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAM9B,kBACF,gBAAgB,iBAChB,6WAAC,kLAAW;gCACV,gBAAgB,YAAY,KAAK;gCACjC,gBAAgB,YAAY,OAAO;gCACnC,UAAU;gCACV,YAAY;gCACZ,cAAc;;;;;uCAGhB,kBAAkB,iBAClB,6WAAC;gCAAI,WAAU;;kDACb,6WAAC,mLAAY;wCACX,iBAAiB,uBAAuB;wCACxC,gBAAgB,oBAAoB,WAAW,UAAU;wCACzD,gBAAgB,YAAY,OAAO;;;;;;oCAGpC,oBAAoB,aACnB,mBAAmB,SAAS,CAAC,qBAAqB,kBAChD,6WAAC,mLAAY;wCACX,UACE,mBAAmB,SAAS,CAAC,qBAAqB;wCAEpD,UAAU,CAAA,SACR,iBACE,mBAAmB,SAAS,CAAC,qBAAqB,CAAC,EAAE,EACrD;wCAGJ,QAAQ;wCACR,SACE,uBACA,mBAAmB,SAAS,CAAC,MAAM,GAAG;wCAExC,YACE,WAAW,CACT,mBAAmB,SAAS,CAAC,qBAAqB,CAAC,EAAE,CACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWzB","debugId":null}}]
}