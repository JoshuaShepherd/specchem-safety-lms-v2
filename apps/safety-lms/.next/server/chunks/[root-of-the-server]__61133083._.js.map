{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\nimport { cache } from \"react\";\n\nexport const createClient = cache(async () => {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value, ...options });\n          } catch (error) {\n            // The `cookies().set()` method can only be called from a Server Component or Server Action.\n            // This error can be ignored if you are running tests that don't have a Server Component.\n          }\n        },\n        remove(name: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value: \"\", ...options });\n          } catch (error) {\n            // The `cookies().set()` method can only be called from a Server Component or Server Action.\n            // This error can be ignored if you are running tests that don't have a Server Component.\n          }\n        },\n      },\n    }\n  );\n});\n\n// Legacy export for backward compatibility\nexport const createServerSupabaseClient = createClient;\n\n// Server auth helper for API routes\nexport const serverAuth = {\n  async getCurrentUser() {\n    const supabase = await createClient();\n    const { data: { user }, error } = await supabase.auth.getUser();\n\n    if (error || !user) {\n      return { user: null, profile: null };\n    }\n\n    // Get user profile from profiles table\n    const { data: profile, error: profileError } = await supabase\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"auth_user_id\", user.id)\n      .single();\n\n    if (profileError) {\n      console.error(\"Error fetching user profile:\", profileError);\n      return { user, profile: null };\n    }\n\n    return { user, profile };\n  }\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AACA;;;;AAEO,MAAM,eAAe,IAAA,+UAAK,EAAC;IAChC,MAAM,cAAc,MAAM,IAAA,2QAAO;IAEjC,OAAO,IAAA,8SAAkB,sUAGvB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;gBACd,4FAA4F;gBAC5F,yFAAyF;gBAC3F;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;gBACd,4FAA4F;gBAC5F,yFAAyF;gBAC3F;YACF;QACF;IACF;AAEJ;AAGO,MAAM,6BAA6B;AAGnC,MAAM,aAAa;IACxB,MAAM;QACJ,MAAM,WAAW,MAAM;QACvB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE7D,IAAI,SAAS,CAAC,MAAM;YAClB,OAAO;gBAAE,MAAM;gBAAM,SAAS;YAAK;QACrC;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SAClD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB,KAAK,EAAE,EAC1B,MAAM;QAET,IAAI,cAAc;YAChB,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,OAAO;gBAAE;gBAAM,SAAS;YAAK;QAC/B;QAEA,OAAO;YAAE;YAAM;QAAQ;IACzB;AACF","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshshepherd/Projects/specchem-safety-v2-main/apps/safety-lms/src/app/api/content-blocks/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@/lib/supabase/server\";\n\nexport async function GET(request: NextRequest) {\n  try {\n    const supabase = await createClient();\n\n    // Check authentication\n    const {\n      data: { user },\n      error: authError,\n    } = await supabase.auth.getUser();\n    if (authError || !user) {\n      return NextResponse.json(\n        { success: false, error: \"Unauthorized\" },\n        { status: 401 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const sectionId = searchParams.get(\"sectionId\");\n\n    if (!sectionId) {\n      return NextResponse.json(\n        { success: false, error: \"Section ID is required\" },\n        { status: 400 }\n      );\n    }\n\n    // Fetch content blocks for the section\n    const { data: contentBlocks, error } = await supabase\n      .from(\"content_blocks\")\n      .select(\"*\")\n      .eq(\"section_id\", sectionId)\n      .order(\"order_index\", { ascending: true });\n\n    if (error) {\n      console.error(\"Error fetching content blocks:\", error);\n      return NextResponse.json(\n        { success: false, error: \"Failed to fetch content blocks\" },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: contentBlocks || [],\n    });\n  } catch (error) {\n    console.error(\"Content blocks API error:\", error);\n    return NextResponse.json(\n      { success: false, error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = await createClient();\n\n    // Check authentication\n    const {\n      data: { user },\n      error: authError,\n    } = await supabase.auth.getUser();\n    if (authError || !user) {\n      return NextResponse.json(\n        { success: false, error: \"Unauthorized\" },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    const { section_id, block_type, content, metadata, order_index } = body;\n\n    if (!section_id || !block_type || !content) {\n      return NextResponse.json(\n        { success: false, error: \"Missing required fields\" },\n        { status: 400 }\n      );\n    }\n\n    // Create content block\n    const { data: contentBlock, error } = await supabase\n      .from(\"content_blocks\")\n      .insert({\n        section_id,\n        block_type,\n        content,\n        metadata: metadata || {},\n        order_index: order_index || 0,\n      })\n      .select()\n      .single();\n\n    if (error) {\n      console.error(\"Error creating content block:\", error);\n      return NextResponse.json(\n        { success: false, error: \"Failed to create content block\" },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: contentBlock,\n    });\n  } catch (error) {\n    console.error(\"Content blocks API error:\", error);\n    return NextResponse.json(\n      { success: false, error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,WAAW,MAAM,IAAA,2KAAY;QAEnC,uBAAuB;QACvB,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,OAAO,SAAS,EACjB,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAC/B,IAAI,aAAa,CAAC,MAAM;YACtB,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAe,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,YAAY,aAAa,GAAG,CAAC;QAEnC,IAAI,CAAC,WAAW;YACd,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAyB,GAClD;gBAAE,QAAQ;YAAI;QAElB;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,aAAa,EAAE,KAAK,EAAE,GAAG,MAAM,SAC1C,IAAI,CAAC,kBACL,MAAM,CAAC,KACP,EAAE,CAAC,cAAc,WACjB,KAAK,CAAC,eAAe;YAAE,WAAW;QAAK;QAE1C,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,kCAAkC;YAChD,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAiC,GAC1D;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,+QAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM,iBAAiB,EAAE;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,WAAW,MAAM,IAAA,2KAAY;QAEnC,uBAAuB;QACvB,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,OAAO,SAAS,EACjB,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAC/B,IAAI,aAAa,CAAC,MAAM;YACtB,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAe,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG;QAEnE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS;YAC1C,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAA0B,GACnD;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,MAAM,EAAE,MAAM,YAAY,EAAE,KAAK,EAAE,GAAG,MAAM,SACzC,IAAI,CAAC,kBACL,MAAM,CAAC;YACN;YACA;YACA;YACA,UAAU,YAAY,CAAC;YACvB,aAAa,eAAe;QAC9B,GACC,MAAM,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAiC,GAC1D;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,+QAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}